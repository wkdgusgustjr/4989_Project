<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qnaboard">
	
	<!-- 게시글 등록 -->
	<insert id="qnaboard_insert" parameterType="qnaboard">
		INSERT INTO QNABOARD VALUES ( seq_qnaboard.nextVal, #{qna_answertype}, #{qna_publictype}, #{qna_title}, #{qna_register}, #{qna_text}, #{qna_pwd}, 0, TO_CHAR(sysdate, 'yyyy-mm-dd am hh24:mi'), '미답변',  0 )
	</insert>
	
	<!-- 게시글 상세보기 -->
	<select id="qnaboard_selectOne" parameterType="int" resultType="qnaboard">
		SELECT * FROM QNABOARD WHERE QNA_IDX = #{qna_idx}
	</select>
	
	<!-- 상세보기 한 게시물 조회수 증가 -->
	<update id="qnaboard_views" parameterType="qnaboard">
		UPDATE QNABOARD SET QNA_VIEWS = QNA_VIEWS + 1 WHERE QNA_IDX = #{qna_idx}
	</update>
	
	
	<!-- 게시물 검색 -->
	<select id="qnaboard_list" parameterType="java.lang.String" resultType="qnaboard">
 		SELECT * FROM QNABOARD
	 	
  		<!-- 검색 기능 (작성자) -->
		<if test="col.equals('register')">
    	WHERE qna_register like '%'||#{word}||'%' ORDER BY qna_idx DESC 
  		</if>
  		
  		<!-- 검색 기능 (제목) -->
		<if test="col.equals('title')">
    	WHERE qna_title like '%'||#{word}||'%' ORDER BY qna_idx DESC 
  		</if>
  		
  		
  		<!-- 검색 기능 (공개여부) -->
	   	<if test="col.equals('publictype')">
    	WHERE qna_publictype like '%'||#{word}||'%' ORDER BY qna_idx DESC 
  		</if>
  		
  		<!-- 검색 기능 (질문유형) -->
	   	<if test="col.equals('answertype')">
    	WHERE qna_answertype like '%'||#{word}||'%' ORDER BY qna_idx DESC 
  		</if>
  		
  		<!-- 검색 기능 (내용)-->
  	 	<if test="col.equals('text')">
    	WHERE qna_text like '%'||#{word}||'%' ORDER BY qna_idx DESC 
  		</if>
	</select>

	<!-- 게시글 삭제 -->
	<delete id="qnaboard_delete" parameterType="int">
		DELETE FROM	QNABOARD WHERE qna_idx = #{qna_idx}
	</delete>


	<!-- 게시글 수정 -->
	<update id="qnaboard_update" parameterType="qnaboard">
		UPDATE QNABOARD SET qna_title = #{qna_title}, qna_text = #{qna_text}, qna_regidate = TO_CHAR(sysdate, 'yyyy-mm-dd am hh24:mi'), 
		qna_answertype = #{qna_answertype} WHERE qna_idx = #{qna_idx}
	</update>


	<!-- 전체글 수 구하기 -->
	<select id="qnaboard_count" resultType="int">
		SELECT COUNT(*) FROM QNABOARD
	</select>


	<!-- rownum이 적용된 쿼리. 반환타입은 기존 product_list와 같다. -->
	<select id="qnaboard_list_page" parameterType="hashmap" resultType="qnaboard">
		
		<!-- 쿼리문에 <= , >= 등이 들어갈 때 CDATA로 묶어주면 처리가 된다.
			아래 쿼리에서 변경해야할 사항 ( 기존 오라클에서 작성해봤던 쿼리 )
				1. 테이블
				2. 조회할 컬럼들 (select ~ )
				3. 정렬 기준 : 조회수, 날짜 등 유동적일 땐, 파라미터로 전달 받아서 처리해야 한다. (+ 오름차순, 내림차순)
				4. rownum의 범위 (map에 key 이름을 startNo, endNo 으로 해서 값을 넣어놨었음)
				5. 필요 시 , where절 추가 (내용 검색한 결과를 목록으로 보여줄 때 필요) 
					> 이 쇼핑몰 페이지에서는 컴퓨터,가전,스포츠 카테고리에 맞게 상품이 조회되어야 해서 where 추가했음 -->
		<![CDATA[	
		select rownum as rnum, A.*
		from ( select rownum as rnum, B.*
	       from ( select * from QNABOARD order by qna_idx DESC ) B
	       where rownum <= #{endNo}   
	     ) A
		where rnum >= #{startNo}
		]]>
	
	</select>
	
</mapper>
