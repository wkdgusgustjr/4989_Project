<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="seller">
	
	<!-- 아이디 중복체크 -->
	<select id="checkId" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT SELLER_ID FROM SELLER WHERE SELLER_ID = #{paramId}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertUserData" parameterType="seller">
		INSERT INTO SELLER VALUES ( seq_seller.nextVal, #{seller_id}, #{seller_pwd}, #{seller_phonenumber}, #{seller_wallet}, #{seller_joindate} )
	</insert>
	
	<!-- 로그인 + 로그인한 회원정보 get -->	
	<select id="getUserData" parameterType="Map" resultType="seller">	
		SELECT * FROM SELLER WHERE SELLER_ID = #{id} AND SELLER_PWD = #{pwd}
	</select>
	
	<!-- 회원정보수정 -->
	<update id="updateUserData" parameterType="seller">
		UPDATE SELLER SET SELLER_PHONENUMBER = #{seller_phonenumber} WHERE SELLER_ID = #{seller_id}
	</update>
	
	<!-- 비밀번호수정 -->
	<update id="updateUserPwd" parameterType="seller">
		UPDATE SELLER SET SELLER_PWD = #{seller_pwd} WHERE SELLER_ID = #{seller_id}
	</update>
	
	<!-- 비밀번호 수정하고 다시 세션에 저장할때 새 비밀번호 가져오기 -->
	<select id="getUserPwd" parameterType="seller" resultType="java.lang.String">
		SELECT SELLER_PWD FROM SELLER WHERE SELLER_ID = #{seller_id}
	</select>
	
	<!-- 비밀번호찾기 -->
	<select id="searchUserPwd" parameterType="java.util.Map" resultType="java.lang.String">
		SELECT SELLER_PWD FROM SELLER WHERE SELLER_ID = #{id} AND SELLER_PHONENUMBER = #{phonenumber}
	</select>
	
	<!-- 회원탈퇴 -->
	<delete id="deleteUserData" parameterType="java.lang.String">
		DELETE FROM SELLER WHERE SELLER_ID = #{id}
	</delete>
	
	<!-- 탈퇴한 회원 연령대 + 사유 저장 -->
	<insert id="insertLeavingReason" parameterType="java.util.Map">
		INSERT INTO LEAVING_MEMBER VALUES ( seq_leaving.nextVal, #{leaving_ages}, #{leaving_reason}, TO_CHAR(sysdate, 'yyyy-mm-dd am hh24:mi'), #{leaving_id} )
	</insert>
	
	<!-- 거래가 완료되면 지갑에 돈 들어옴 (Seller)-->
	<update id="getMoney" parameterType="java.util.Map">
		UPDATE SELLER SET SELLER_WALLET = SELLER_WALLET + #{money} WHERE SELLER_ID = #{seller_id}
	</update>
	
	<!-- 현재 보유한 머니 가져옴 (Seller) -->	
	<select id="getSellerWallet" parameterType="java.lang.String" resultType="int">	
		SELECT SELLER_WALLET FROM SELLER WHERE SELLER_ID = #{seller_id}
	</select>
	
	<!-- 내가 등록한 상품 (Seller) -->
	<select id="getMyProduct" parameterType="java.lang.String" resultType="product">
		SELECT * FROM PRODUCT WHERE P_REGISTER = #{sellerId} AND P_STATUS = '대기'
	</select>
	
	<!-- 내가 등록한 상품 -> 수정버튼 클릭한 상품 내용 불러오기 (Seller) -->
	<select id="getMyProductUpdate" parameterType="int" resultType="product">
		SELECT * FROM PRODUCT WHERE P_IDX = #{p_idx}
	</select>
	
	<!-- 내가 등록한 상품 -> 삭제버튼 클릭한 상품 삭제 (PRODUCT테이블) (Seller) -->
	<delete id="myProductDelete_PRODUCT" parameterType="int">
		DELETE FROM PRODUCT WHERE P_IDX = #{p_idx}
	</delete>
	
	<!-- 내가 등록한 상 품 -> 삭제버튼 클릭한상품 TRADING 테이블에서 상품 상태를 '삭제됨' 으로 변경 (Seller) -->
	<update id="myProductDelete_TRADING" parameterType="int">
		UPDATE TRADING SET T_STATUS = '삭제됨' WHERE P_IDX = #{p_idx}
	</update>
	
</mapper>



































